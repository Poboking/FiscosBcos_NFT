############ 服务端口设置  ############
server:
  port: 8080


############ DB 设置  ############
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/open_nft?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
    username: root
    password: liya4537
    driver-class-name: com.mysql.cj.jdbc.Driver

############ Mapper设置  ############
#下面这些内容是为了让MyBatis映射
#指定Mybatis的Mapper文件
mybatis:
  mapper-locations: mappers/*xml
  #指定Mybatis的实体目录
  type-aliases-package: org.sziit.infrastructure.dao.domain


############## Graceful Response 配置 ##############
graceful-response:
  response-style: 1
  exclude-packages:
    - com.github.xiaoymin.**
    - springfox.**
    - io.swagger.**
    - org.springdoc.**
  # 自定义的成功响应码，不配置则为0
  default-success-code: 0
  # 自定义的成功提示，默认为ok
  default-success-msg: successful
  # 自定义的失败响应码，默认为1
  default-error-code: 1
  # 自定义的失败提示，默认为error
  default-error-msg: error
  # 设置是否将原生异常错误信息detailMessage字段填充到Response的msg中
  # 默认为false，即不打开
  origin-exception-using-detail-message: false
  # 是否打印异常日志，默认为false
  print-exception-in-global-advice: true


############## SpringDoc 配置 ##############
# SpringDoc 默认API文档:
# http://localhost:8080/doc.html
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    tags-sorter: alpha
  group-configs:
    - group: user
      display-name: "user接口文档"
      paths-to-match: '/**'
      packages-to-scan: org.sziit.presentation.member
    - group: admin
      display-name: "admin接口文档"
      paths-to-match: '/**'
      packages-to-scan: org.sziit.presentation.admin
  default-flat-param-object: true
knife4j:
  # 开启增强配置
  enable: true
  #   开启生产环境屏蔽（如果是生产环境，需要把下面配置设置true）
  #  production: true
  setting:
    language: zh_cn
    swagger-model-name: 实体类列表
  basic: # 开始授权认证
    enable: false
    username: admin
    password: 123456


############ Sa-Token配置  ############
sa-token:
  # token前缀
  # Token前缀 与 Token值 之间必须有一个空格。
  # 一旦配置了 Token前缀，则前端提交 Token 时，必须带有前缀，否则会导致框架无法读取 Token。
  # 由于Cookie中无法存储空格字符，也就意味配置 Token 前缀后，Cookie 鉴权方式将会失效，此时只能将 Token 提交到header里进行传输
  # token-prefix: Bearer
  # token 名称 (同时也是cookie名称)
  token-name: satoken
  # token 有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token 临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # 配置 Sa-Token 单独使用的 Redis 连接
########## Sa-Token 单独使用的 Redis 连接配置 ##########
########## 若不需要集成redis 则下述配置可取消 ##########
#  alone-redis:
#    # Redis数据库索引（默认为0）
#    database: 0
#    # Redis服务器地址
#    host: 127.0.0.1
#    # Redis服务器连接端口
#    port: 6379
#    # Redis服务器连接密码（默认为空）
#    password:
#    # 连接超时时间
#    timeout: 10s
#spring:
#  # 配置业务使用的 Redis 连接
#  redis:
#    # Redis数据库索引（默认为0）
#    database: 1
#    # Redis服务器地址
#    host: 127.0.0.1
#    # Redis服务器连接端口
#    port: 6379
#    # Redis服务器连接密码（默认为空）
#    password:
#    # 连接超时时间
#    timeout: 10s



